// Copyright (C) 2025 CypherGoat
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

package views

import (
    "github.com/CypherGoat/web/cmd/api"
    "fmt"
)

templ Affiliate() {
    @Header(){
    }
    <style>
    html, body {
        height: 100%;
        margin: 0;
        scroll-behavior: smooth;
    }

    body {
        background-color: #121520;
    font-family: 'Inter', 'Segoe UI', 'Arial', sans-serif;
        min-height: 100vh;
        display: flex;
        flex-direction: column;
    }

    .main-content {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        min-height: 100vh;
    }

    footer {
        margin-top: auto;
        width: 100%;
    }

.container {
    max-width: 700px;
    height: auto;
    margin: 0 auto;
    padding: 1rem;
    color: #f5f5f5;
    align-items: center;
}

.container2 {
    max-width:90%;
    height: auto;
    margin: 2rem auto;
    padding: 1rem;
    color: #f5f5f5;
    align-items: center;
}

.container3 {
    max-width:70%;
    height: auto;
    margin: 2rem auto;
    padding: 1rem;
    color: #f5f5f5;
    align-items: center;
}

    .card {
        background: linear-gradient(145deg, #1a1f2e, #222633);
        border-radius: 16px;
        padding: 2rem;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3), 0 2px 6px rgba(0, 102, 204, 0.07);
        transition: box-shadow 0.3s ease, transform 0.3s ease;
        border: 1px solid rgba(255, 255, 255, 0.05);
    }

    .card:hover {
        box-shadow: 0 16px 48px rgba(0, 0, 0, 0.4), 0 3px 10px rgba(0, 102, 204, 0.1);
        transform: translateY(-2px);
    }

    .card h2 {
        color: #ffffff;
        font-size: 1.75rem;
        margin-bottom: 1.5rem;
        font-weight: 700;
        text-align: center;
    }

    .rgb-effect {
        background: linear-gradient(90deg, #00bfff, #1e90ff, #4a54f1);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        animation: gradientFlow 6s ease infinite;
        background-size: 200% auto;
    }

    @keyframes gradientFlow {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }

    @keyframes rgbAnimation {
        0% { background-position: 0% 0%; }
        50% { background-position: 100% 100%; }
        100% { background-position: 0% 0%; }
    }

    .btn-primary {
        background: linear-gradient(45deg, #00bfff, #1e90ff, #007bff, #0056b3);
        background-size: 400% 400%;
        color: #ffffff;
        padding: 0.85rem 1.5rem;
        border: none;
        border-radius: 12px;
        font-size: 1.1rem;
        font-weight: 700;
        cursor: pointer;
        width: auto;
        transition: transform 0.2s ease, box-shadow 0.3s ease;
        background-clip: padding-box;
        position: relative;
        animation: rgbAnimation 6s ease infinite;
        text-shadow: 1px 1px 4px rgba(30, 144, 255, 0.7);
        text-decoration: none;
        display: inline-block;
        letter-spacing: 0.5px;
    }

    .btn-primary:hover {
        transform: scale(1.05);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
    }

    .btn-primary:focus {
        outline: none;
        box-shadow: 0 0 0 3px rgba(74, 84, 241, 0.3);
    }

    .feature-card {
        background: linear-gradient(145deg, #2c2c2c, #252525);
        border-radius: 16px;
        padding: 2rem;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: 1px solid rgba(255, 255, 255, 0.05);
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    .feature-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 16px 48px rgba(0, 0, 0, 0.6);
    }

    .feature-icon {
        font-size: 3rem;
        margin-bottom: 1rem;
        background: linear-gradient(45deg, #00bfff, #4a54f1);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
    }

    .form-input {
        width: 100%;
        padding: 0.85rem;
        background-color: #2e2e2e;
        color: #e0e0e0;
        border: 1px solid #555;
        border-radius: 12px;
        font-size: 1rem;
        transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }

    .form-input:focus {
        border-color: #4a54f1;
        outline: none;
        box-shadow: 0 0 0 3px rgba(74, 84, 241, 0.2);
    }

    .form-label {
        color: #e0e0e0;
        font-weight: 600;
        font-size: 1rem;
        display: block;
        margin-bottom: 0.5rem;
    }

    .step-card {
        position: relative;
        padding-left: 4rem;
        margin-bottom: 2.5rem;
    }

    .step-number {
        position: absolute;
        top: 0;
        left: 0;
        width: 3rem;
        height: 3rem;
        background: linear-gradient(45deg, #00bfff, #4a54f1);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: bold;
        font-size: 1.2rem;
        box-shadow: 0 4px 12px rgba(0, 191, 255, 0.3);
    }

    .testimonial-card {
        background: rgba(44, 44, 44, 0.6);
        border-radius: 16px;
        padding: 1.5rem;
        border: 1px solid rgba(255, 255, 255, 0.05);
        margin-bottom: 1rem;
        position: relative;
    }

    .testimonial-card:before {
        content: '"';
        position: absolute;
        top: 10px;
        left: 15px;
        font-size: 3rem;
        color: rgba(74, 84, 241, 0.2);
        font-family: Georgia, serif;
    }

    .highlight {
        color: #00bfff;
        font-weight: bold;
    }

    .faq-item {
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        padding-bottom: 1.5rem;
    }

    @media (max-width: 768px) {
        .container2 {
            max-width: 100%;
            padding: 0.5rem;
            margin: 1rem auto;
        }
        
        .container3 {
            max-width: 100%;
            padding: 0.5rem;
            margin: 1rem auto;
        }
        
        .card {
            padding: 1.5rem;
            border-radius: 12px;
        }
        
        .step-card {
            padding-left: 3.5rem;
            margin-bottom: 2rem;
        }
        
        .step-number {
            width: 2.5rem;
            height: 2.5rem;
            font-size: 1rem;
        }

        h1 {
            font-size: 2.5rem !important;
            line-height: 1.2 !important;
        }

        h2 {
            font-size: 1.75rem !important;
        }

        h3 {
            font-size: 1.25rem !important;
        }

        p {
            font-size: 1rem !important;
        }

        .btn-primary {
            padding: 0.75rem 1.25rem;
            font-size: 1rem;
            width: 100%;
            text-align: center;
            margin: 0 auto;
            display: block;
        }

        .text-6xl {
            font-size: 2.5rem !important;
        }

        .text-xl {
            font-size: 1rem !important;
        }

        .mb-16 {
            margin-bottom: 2rem !important;
        }
        
        .mb-8 {
            margin-bottom: 1rem !important;
        }
    }

    @media (max-width: 480px) {
        .card {
            padding: 1.25rem;
        }
        
        .step-card {
            padding-left: 3rem;
        }
        
        .step-number {
            width: 2.25rem;
            height: 2.25rem;
        }
        
        h1 {
            font-size: 2rem !important;
        }
    }
    </style>

    <div class="pt-0 container2 mx-auto p-7 min-h-screen main-content">
        <div class="text-center mb-16">
            <h1 class="text-6xl font-extrabold text-white bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-purple-500 inline-block rgb-effect leading-tight">
                Affiliate Program
            </h1>
            <p class="text-gray-300 mt-6 text-xl max-w-3xl mx-auto">
                Partner with CypherGoat and <span class="rgb-effect">earn up to 50% commission</span> while helping others find the best rates for their crypto swaps.
            </p>
        </div>

        <div class="container3 mx-auto mb-20">
            <div class="card">
                <h2 class="text-3xl font-bold text-center text-white mb-8">How Our Affiliate Program Works</h2>
                <br/>
                <div class="step-card"> 
                    <div class="step-number">1</div>
                    <h3 class="text-xl font-bold text-white mb-3">Register</h3>
                    <p class="text-gray-300">Register with your email address and create a password.</p>
                </div>
                
                <div class="step-card">
                    <div class="step-number">2</div>
                    <h3 class="text-xl font-bold text-white mb-3">Get Your Unique Links</h3>
                    <p class="text-gray-300">Once logged in, you will get your unique links and can start earning</p>
                </div>
                
                <div class="step-card">
                    <div class="step-number">3</div>
                    <h3 class="text-xl font-bold text-white mb-3">Promote CypherGoat</h3>
                    <p class="text-gray-300">Share your links through your website, blog, social media, or other channels to your audience.</p>
                </div>
                
                <div class="step-card">
                    <div class="step-number">4</div>
                    <h3 class="text-xl font-bold text-white mb-3">Track & Earn</h3>
                    <p class="text-gray-300">Monitor performance in real-time and receive up to 50% of our fees for every successful transaction.</p>
                </div>
                
                <div class="text-center mt-8">
                    <a href="/affiliate/register" class="btn-primary">Become an Affiliate</a>
                </div>
                <br/>
                <div class="text-center mt-4">
                    <p class="text-gray-300">Have questions? <a href="/contact/" class="text-blue-400">Contact us</a></p>
                </div>
            </div>
        </div>
    </div>
}

templ AffiliateTerms(){
    @Header(){}
    <style>
    body {
        background-color: #1c1c1c;
        font-family: 'Arial', sans-serif;
    }
    </style>
    <div class="text-gray-100 font-sans py-8 px-4">
        <header class="mb-12 text-center">
            <h1 class="text-4xl font-bold text-white mb-4">CypherGoat Affiliate Program Terms & Conditions</h1>
            <p class="text-lg text-gray-400">By signing up for the CypherGoat Affiliate Program, you agree to comply with the following terms and conditions.</p>
        </header>

        <ul class="space-y-8 max-w-4xl mx-auto">
            <li>
                <strong class="text-white text-xl">1. Eligibility</strong>
                <ul class="list-disc list-inside text-base text-gray-300">
                    <li>CypherGoat reserves the right to reject any application at its sole discretion.</li>
                </ul>
            </li>
            <li>
                <strong class="text-white text-xl">2. Affiliate Responsibilities</strong>
                <ul class="list-disc list-inside text-base text-gray-300">
                    <li>You agree to promote CypherGoat in a lawful and ethical manner.</li>
                    <li>You may not engage in spam, misleading advertising, or fraudulent activities.</li>
                    <li>You are responsible for ensuring compliance with all applicable laws and regulations.</li>
                </ul>
            </li>
            <li>
                <strong class="text-white text-xl">3. Commission Structure & Payouts</strong>
                <ul class="list-disc list-inside text-base text-gray-300">
                    <li>Affiliates earn a commission for each qualifying transaction made through their referral link.</li>
                    <li>Payments are made in cryptocurrency, with a minimum payout threshold of 0.002 Bitcoin.</li>
                    <li>CypherGoat reserves the right to adjust commission rates at any time.</li>
                </ul>
            </li>
            <li>
                <strong class="text-white text-xl">4. Restrictions</strong>
                <ul class="list-disc list-inside text-base text-gray-300">
                    <li>Affiliates may not bid on CypherGoat’s brand name or variations in paid advertising campaigns.</li>
                    <li>Any attempt to impersonate CypherGoat or mislead users is strictly prohibited.</li>
                    <li>Self-referrals or fraudulent transactions will result in immediate disqualification.</li>
                </ul>
            </li>
            <li>
                <strong class="text-white text-xl">5. Termination & Modifications</strong>
                <ul class="list-disc list-inside text-base text-gray-300">
                    <li>CypherGoat reserves the right to terminate or modify this affiliate program at any time.</li>
                    <li>Affiliates who violate these terms may have their accounts suspended without prior notice.</li>
                    <li>Unclaimed commissions may be forfeited in cases of rule violations.</li>
                </ul>
            </li>
            <li>
                <strong class="text-white text-xl">6. Liability & Disclaimer</strong>
                <ul class="list-disc list-inside text-base text-gray-300">
                    <li>CypherGoat is not liable for any indirect damages resulting from participation in the program.</li>
                    <li>Affiliates are independent contractors and not employees or partners of CypherGoat.</li>
                </ul>
            </li>
        </ul>

        <p class="text-base text-center text-gray-400 mt-8">By utilizing CypherGoat, you acknowledge and agree to these terms. Should you have any questions or concerns, feel free to contact us.</p>
    </div>
}

templ AffiliateLogin(errors []string, success string) {
    @Header(){}
    <style>
        html, body {
            height: 100%;
            margin: 0;
            scroll-behavior: smooth;
        }
        body {
            background-color: #121520;
            font-family: 'Inter', 'Segoe UI', 'Arial', sans-serif;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }
        .login-container {
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: calc(100vh - 200px);
            padding: 2rem;
        }
        .login-panel {
            background: linear-gradient(145deg, #181b28, #1e2235);
            border-radius: 18px;
            padding: 3rem 2.5rem;
            box-shadow: 0 12px 40px rgba(0,0,0,0.4);
            border: 1px solid rgba(255,255,255,0.08);
            max-width: 420px;
            width: 100%;
        }
        .login-header {
            text-align: center;
            margin-bottom: 2rem;
        }
        .login-title {
            color: #fff;
            font-size: 2.2rem;
            font-weight: 800;
            margin-bottom: 0.5rem;
            background: linear-gradient(45deg, #00bfff, #4a54f1);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }
        .login-subtitle {
            color: #b0b8d1;
            font-size: 1.1rem;
        }
        .form-group {
            margin-bottom: 1.5rem;
        }
        .form-label {
            color: #e0e0e0;
            font-weight: 600;
            font-size: 1rem;
            display: block;
            margin-bottom: 0.5rem;
        }
        .form-input {
            width: 100%;
            padding: 0.9rem;
            background-color: #23263a;
            color: #e0e0e0;
            border: 1px solid #3a3f54;
            border-radius: 12px;
            font-size: 1rem;
            transition: all 0.3s;
            box-sizing: border-box;
        }
        .form-input:focus {
            border-color: #4a54f1;
            outline: none;
            box-shadow: 0 0 0 3px rgba(74,84,241,0.15);
            background-color: #2a2e42;
        }
        .btn-login {
            width: 100%;
            background: linear-gradient(45deg, #00bfff, #1e90ff, #007bff, #0056b3);
            background-size: 400% 400%;
            color: #ffffff;
            padding: 0.95rem;
            border: none;
            border-radius: 12px;
            font-size: 1.1rem;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.2s;
            animation: rgbAnimation 6s ease infinite;
        }
        .btn-login:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.3);
        }
        .login-links {
            text-align: center;
            margin-top: 1.5rem;
            padding-top: 1.5rem;
            border-top: 1px solid #2e3448;
        }
        .login-links a {
            color: #4a94ff;
            text-decoration: none;
            font-weight: 500;
        }
        .login-links a:hover {
            text-decoration: underline;
        }
        .alert-error {
            background: rgba(255,107,107,0.1);
            border: 1px solid rgba(255,107,107,0.3);
            color: #ff6b6b;
            padding: 1rem;
            border-radius: 10px;
            margin-bottom: 1.5rem;
        }
        .alert-success {
            background: rgba(75,227,140,0.1);
            border: 1px solid rgba(75,227,140,0.3);
            color: #4be38c;
            padding: 1rem;
            border-radius: 10px;
            margin-bottom: 1.5rem;
        }
        @keyframes rgbAnimation {
            0% { background-position: 0% 0%; }
            50% { background-position: 100% 100%; }
            100% { background-position: 0% 0%; }
        }
    </style>

    <div class="login-container">
        <div class="login-panel">
            <div class="login-header">
                <h1 class="login-title">Affiliate Login</h1>
                <p class="login-subtitle">Access your affiliate dashboard</p>
            </div>

            if len(errors) > 0 {
                <div class="alert-error">
                    <ul style="margin:0;padding-left:1rem;">
                        for _, err := range errors {
                            <li>{err}</li>
                        }
                    </ul>
                </div>
            }

            if success != "" {
                <div class="alert-success">
                    {success}
                </div>
            }

            <form method="POST" action="/affiliate/login">
                <div class="form-group">
                    <label class="form-label" for="username">Username</label>
                    <input class="form-input" type="text" id="username" name="username" required placeholder="Enter your username" autocomplete="username"/>
                </div>

                <div class="form-group">
                    <label class="form-label" for="password">Password</label>
                    <input class="form-input" type="password" id="password" name="password" required placeholder="Enter your password" autocomplete="current-password"/>
                </div>

                <button type="submit" class="btn-login">Login</button>
            </form>

            <div class="login-links">
                <p style="color: #b0b8d1; margin-bottom: 0.5rem;">Don't have an account?</p>
                <a href="/affiliate/register">Create an affiliate account</a>
            </div>
        </div>
    </div>
    @Footer(){}
}

templ AffiliateRegister(errors []string, success string, token string) {
    @Header(){}
    <style>
        html, body {
            height: 100%;
            margin: 0;
            scroll-behavior: smooth;
        }
        body {
            background-color: #121520;
            font-family: 'Inter', 'Segoe UI', 'Arial', sans-serif;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }
        .register-container {
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: calc(100vh - 200px);
            padding: 2rem;
        }
        .register-panel {
            background: linear-gradient(145deg, #181b28, #1e2235);
            border-radius: 18px;
            padding: 3rem 2.5rem;
            box-shadow: 0 12px 40px rgba(0,0,0,0.4);
            border: 1px solid rgba(255,255,255,0.08);
            max-width: 450px;
            width: 100%;
        }
        .register-header {
            text-align: center;
            margin-bottom: 2rem;
        }
        .register-title {
            color: #fff;
            font-size: 2.2rem;
            font-weight: 800;
            margin-bottom: 0.5rem;
            background: linear-gradient(45deg, #00bfff, #4a54f1);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }
        .register-subtitle {
            color: #b0b8d1;
            font-size: 1.1rem;
        }
        .form-group {
            margin-bottom: 1.5rem;
        }
        .form-label {
            color: #e0e0e0;
            font-weight: 600;
            font-size: 1rem;
            display: block;
            margin-bottom: 0.5rem;
        }
        .form-input {
            width: 100%;
            padding: 0.9rem;
            background-color: #23263a;
            color: #e0e0e0;
            border: 1px solid #3a3f54;
            border-radius: 12px;
            font-size: 1rem;
            transition: all 0.3s;
            box-sizing: border-box;
        }
        .form-input:focus {
            border-color: #4a54f1;
            outline: none;
            box-shadow: 0 0 0 3px rgba(74,84,241,0.15);
            background-color: #2a2e42;
        }
        .btn-register {
            width: 100%;
            background: linear-gradient(45deg, #00bfff, #1e90ff, #007bff, #0056b3);
            background-size: 400% 400%;
            color: #ffffff;
            padding: 0.95rem;
            border: none;
            border-radius: 12px;
            font-size: 1.1rem;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.2s;
            animation: rgbAnimation 6s ease infinite;
        }
        .btn-register:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.3);
        }
        .register-links {
            text-align: center;
            margin-top: 1.5rem;
            padding-top: 1.5rem;
            border-top: 1px solid #2e3448;
        }
        .register-links a {
            color: #4a94ff;
            text-decoration: none;
            font-weight: 500;
        }
        .register-links a:hover {
            text-decoration: underline;
        }
        .alert-error {
            background: rgba(255,107,107,0.1);
            border: 1px solid rgba(255,107,107,0.3);
            color: #ff6b6b;
            padding: 1rem;
            border-radius: 10px;
            margin-bottom: 1.5rem;
        }
        .alert-success {
            background: rgba(75,227,140,0.1);
            border: 1px solid rgba(75,227,140,0.3);
            color: #4be38c;
            padding: 1rem;
            border-radius: 10px;
            margin-bottom: 1.5rem;
        }
        @keyframes rgbAnimation {
            0% { background-position: 0% 0%; }
            50% { background-position: 100% 100%; }
            100% { background-position: 0% 0%; }
        }
    </style>

    <div class="register-container">
        <div class="register-panel">
            <div class="register-header">
                <h1 class="register-title">Complete Registration</h1>
                <p class="register-subtitle">Set up your affiliate account</p>
            </div>

            if len(errors) > 0 {
                <div class="alert-error">
                    <ul style="margin:0;padding-left:1rem;">
                        for _, err := range errors {
                            <li>{err}</li>
                        }
                    </ul>
                </div>
            }

            if success != "" {
                <div class="alert-success">
                    {success}
                    <div style="margin-top: 1rem;">
                        <a href="/affiliate/login" style="color: #4a94ff; text-decoration: underline;">Login now</a>
                    </div>
                </div>
            } else {
                <form method="POST" action="/affiliate/register">
                    <input type="hidden" name="token" value={token} />

                    <div class="form-group">
                        <label class="form-label" for="username">Username</label>
                        <input class="form-input" type="text" id="username" name="username" required placeholder="Choose a username" autocomplete="username"/>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="email">Email</label>
                        <input class="form-input" type="email" id="email" name="email" required placeholder="your@email.com" autocomplete="email"/>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="password">Password</label>
                        <input class="form-input" type="password" id="password" name="password" required placeholder="Create a strong password" autocomplete="new-password"/>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="confirm_password">Confirm Password</label>
                        <input class="form-input" type="password" id="confirm_password" name="confirm_password" required placeholder="Confirm your password" autocomplete="new-password"/>
                    </div>

                    <button type="submit" class="btn-register">Complete Registration</button>
                </form>
            }

            <div class="register-links">
                <p style="color: #b0b8d1; margin-bottom: 0.5rem;">Already have an account?</p>
                <a href="/affiliate/login">Login here</a>
            </div>
        </div>
    </div>
    @Footer(){}
}


templ AffiliateDashboard(stats *api.AffiliateStats) {
    @Header(){}
    <style>
        body {
            background-color: #121520;
            font-family: 'Inter', 'Segoe UI', 'Arial', sans-serif;
        }
        .dashboard-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }
        .dashboard-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            flex-wrap: wrap;
            gap: 1rem;
        }
        .dashboard-title {
            color: #ffffff;
            font-size: 2.5rem;
            font-weight: 800;
            margin: 0;
        }
        .logout-btn {
            background: linear-gradient(45deg, #dc3545, #c82333);
            color: white;
            padding: 0.7rem 1.5rem;
            border: none;
            border-radius: 8px;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.2s;
        }
        .logout-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(220,53,69,0.3);
        }
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }
        .stat-card {
            background: linear-gradient(145deg, #1a1f2e, #222633);
            border-radius: 16px;
            padding: 1.5rem;
            border: 1px solid rgba(255,255,255,0.05);
        }
        .stat-title {
            color: #b0b8d1;
            font-size: 0.9rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 0.5rem;
        }
        .stat-value {
            color: #ffffff;
            font-size: 2rem;
            font-weight: 800;
            margin-bottom: 0.25rem;
        }
        .stat-subtitle {
            color: #6b7280;
            font-size: 0.85rem;
        }
        .referral-section {
            background: linear-gradient(145deg, #1a1f2e, #222633);
            border-radius: 16px;
            padding: 2rem;
            margin-bottom: 2rem;
            border: 1px solid rgba(255,255,255,0.05);
        }
        .section-title {
            color: #ffffff;
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 1rem;
        }
        .referral-link-container {
            display: flex;
            gap: 0.5rem;
            margin-top: 1rem;
            flex-wrap: wrap;
        }
        .referral-link {
            flex: 1;
            padding: 0.8rem;
            background: #23263a;
            border: 1px solid #3a3f54;
            border-radius: 8px;
            color: #e0e0e0;
            font-family: 'Courier New', monospace;
            font-size: 0.9rem;
            min-width: 300px;
        }
        .copy-btn {
            background: linear-gradient(45deg, #00bfff, #4a54f1);
            color: white;
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.2s;
            white-space: nowrap;
        }
        .copy-btn:hover {
            transform: translateY(-2px);
        }
        .recent-swaps {
            background: linear-gradient(145deg, #1a1f2e, #222633);
            border-radius: 16px;
            padding: 2rem;
            border: 1px solid rgba(255,255,255,0.05);
        }
        .swaps-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 1rem;
        }
        .swaps-table th {
            color: #b0b8d1;
            font-weight: 600;
            text-align: left;
            padding: 0.75rem;
            border-bottom: 1px solid #2e3448;
        }
        .swaps-table td {
            color: #e0e0e0;
            padding: 0.75rem;
            border-bottom: 1px solid rgba(255,255,255,0.05);
        }
        .commission-positive {
            color: #22c55e;
            font-weight: 600;
        }
        @media (max-width: 768px) {
            .dashboard-container {
                padding: 1rem;
            }
            .dashboard-title {
                font-size: 2rem;
            }
            .referral-link-container {
                flex-direction: column;
            }
            .referral-link {
                min-width: unset;
            }
        }
    </style>

    <div class="dashboard-container">
        <div class="dashboard-header">
            <h1 class="dashboard-title">Affiliate Dashboard</h1>
            <a href="/affiliate/logout" class="logout-btn">Logout</a>
        </div>

        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-title">Total Swaps</div>
                <div class="stat-value">{fmt.Sprintf("%d", stats.TotalClicks)}</div>
                <div class="stat-subtitle">All referral swaps (including incomplete)</div>
            </div>

            <div class="stat-card">
                <div class="stat-title">Completed Swaps</div>
                <div class="stat-value">{fmt.Sprintf("%d", stats.TotalSwaps)}</div>
                <div class="stat-subtitle">Successfully completed swaps</div>
            </div>

            <div class="stat-card">
                <div class="stat-title">Total Commission</div>
                <div class="stat-value">{fmt.Sprintf("$%.2f", stats.TotalCommission)}</div>
                <div class="stat-subtitle">Total earnings to date</div>
            </div>

            <div class="stat-card">
                <div class="stat-title">Pending Payout</div>
                <div class="stat-value">{fmt.Sprintf("$%.2f", stats.PendingPayout)}</div>
                <div class="stat-subtitle">Available for withdrawal</div>
            </div>
        </div>

        <div class="referral-section">
            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
                <h2 class="section-title" style="margin-bottom: 0;">Your Referral Link</h2>
                <div style="display: flex; gap: 0.5rem;">
                    <a href="/affiliate/payout" style="background: linear-gradient(45deg, #22c55e, #16a34a); color: white; padding: 0.5rem 1rem; border-radius: 8px; text-decoration: none; font-weight: 600; font-size: 0.9rem;">Request Payout</a>
                    <a href="/affiliate/payout/history" style="background: linear-gradient(45deg, #6b7280, #4b5563); color: white; padding: 0.5rem 1rem; border-radius: 8px; text-decoration: none; font-weight: 600; font-size: 0.9rem;">Payout History</a>
                </div>
            </div>
            <p style="color: #b0b8d1; margin-bottom: 1rem;">
                Share this link to earn commission on every successful swap:
            </p>
            if stats.ReferralLink != "" {
                <div class="referral-link-container">
                    <input type="text" class="referral-link" value={fmt.Sprintf("https://cyphergoat.com/?ref=%s", stats.ReferralLink)} readonly id="referral-link"/>
                    <button class="copy-btn" onclick="copyReferralLink()">Copy Link</button>
                </div>
            } else {
                <div style="color: #ff6b6b; padding: 1rem; background: rgba(255,107,107,0.1); border: 1px solid rgba(255,107,107,0.3); border-radius: 10px;">
                    <p>Your referral link is being generated. Please contact support if this persists.</p>
                    <p><strong>Debug Info:</strong></p>
                    <p>Affiliate ID: {stats.AffiliateID}</p>
                    <p>Referral Code: "{stats.ReferralLink}"</p>
                </div>
            }
        </div>

        if len(stats.AllTrades) > 0 {
            <div class="recent-swaps">
                <h2 class="section-title">All Referral Trades</h2>
                <table class="swaps-table">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>ID</th>
                            <th>Swap</th>
                            <th>Amount</th>
                            <th>Exchange</th>
                            <th>Status</th>
                            <th>Commission</th>
                        </tr>
                    </thead>
                    <tbody>
                        for _, trade := range stats.AllTrades {
                            <tr>
                                <td>{trade.Date}</td>
                                <td style="font-family: 'Courier New', monospace; font-size: 0.8rem;">{trade.ID}</td>
                                <td>{trade.Coin1} → {trade.Coin2}</td>
                                <td>{fmt.Sprintf("%.4f", trade.Amount)}</td>
                                <td>{trade.Exchange}</td>
                                <td>
                                    if trade.Complete {
                                        <span style="color: #22c55e; font-weight: 600;">✓ Complete</span>
                                    } else {
                                        <span style="color: #f59e0b; font-weight: 600;">⏳ {trade.Status}</span>
                                    }
                                </td>
                                <td>
                                    if trade.Complete && trade.Commission > 0 {
                                        <span class="commission-positive">{fmt.Sprintf("$%.2f", trade.Commission)}</span>
                                    } else {
                                        <span style="color: #6b7280;">-</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        } else if len(stats.RecentSwaps) > 0 {
            <div class="recent-swaps">
                <h2 class="section-title">Recent Swaps</h2>
                <table class="swaps-table">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Swap</th>
                            <th>Amount</th>
                            <th>Exchange</th>
                            <th>Commission</th>
                        </tr>
                    </thead>
                    <tbody>
                        for _, swap := range stats.RecentSwaps {
                            <tr>
                                <td>{swap.Date}</td>
                                <td>{swap.Coin1} → {swap.Coin2}</td>
                                <td>{fmt.Sprintf("%.4f", swap.Amount)}</td>
                                <td>{swap.Exchange}</td>
                                <td class="commission-positive">{fmt.Sprintf("$%.2f", swap.Commission)}</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>

    <script>
        function copyReferralLink() {
            const linkInput = document.getElementById('referral-link');
            linkInput.select();
            linkInput.setSelectionRange(0, 99999);
            navigator.clipboard.writeText(linkInput.value).then(() => {
                const btn = document.querySelector('.copy-btn');
                const originalText = btn.textContent;
                btn.textContent = 'Copied!';
                setTimeout(() => {
                    btn.textContent = originalText;
                }, 2000);
            });
        }
    </script>

    @Footer(){}
}

templ AffiliatePayout(errors []string, success string, stats *api.AffiliateStats) {
    @Header(){}
    <style>
        body {
            background-color: #121520;
            font-family: 'Inter', 'Segoe UI', 'Arial', sans-serif;
        }
        .payout-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 2rem;
        }
        .payout-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            flex-wrap: wrap;
            gap: 1rem;
        }
        .payout-title {
            color: #ffffff;
            font-size: 2.5rem;
            font-weight: 800;
            margin: 0;
        }
        .back-btn {
            background: linear-gradient(45deg, #6b7280, #4b5563);
            color: white;
            padding: 0.7rem 1.5rem;
            border: none;
            border-radius: 8px;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.2s;
        }
        .back-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(107,114,128,0.3);
        }
        .balance-card {
            background: linear-gradient(145deg, #1a1f2e, #222633);
            border-radius: 16px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            border: 1px solid rgba(255,255,255,0.05);
            text-align: center;
        }
        .balance-amount {
            color: #22c55e;
            font-size: 2.5rem;
            font-weight: 800;
            margin-bottom: 0.5rem;
        }
        .balance-label {
            color: #b0b8d1;
            font-size: 1rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        .payout-form {
            background: linear-gradient(145deg, #1a1f2e, #222633);
            border-radius: 16px;
            padding: 2rem;
            border: 1px solid rgba(255,255,255,0.05);
        }
        .form-group {
            margin-bottom: 1.5rem;
        }
        .form-label {
            color: #e0e0e0;
            font-weight: 600;
            font-size: 1rem;
            display: block;
            margin-bottom: 0.5rem;
        }
        .form-input {
            width: 100%;
            padding: 0.9rem;
            background-color: #23263a;
            color: #e0e0e0;
            border: 1px solid #3a3f54;
            border-radius: 12px;
            font-size: 1rem;
            transition: all 0.3s;
            box-sizing: border-box;
        }
        .form-input:focus {
            border-color: #4a54f1;
            outline: none;
            box-shadow: 0 0 0 3px rgba(74,84,241,0.15);
            background-color: #2a2e42;
        }
        .btn-payout {
            width: 100%;
            background: linear-gradient(45deg, #22c55e, #16a34a);
            color: white;
            padding: 0.95rem;
            border: none;
            border-radius: 12px;
            font-size: 1.1rem;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.2s;
        }
        .btn-payout:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(34,197,94,0.3);
        }
        .btn-payout:disabled {
            background: #6b7280;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        .alert-error {
            background: rgba(255,107,107,0.1);
            border: 1px solid rgba(255,107,107,0.3);
            color: #ff6b6b;
            padding: 1rem;
            border-radius: 10px;
            margin-bottom: 1.5rem;
        }
        .alert-success {
            background: rgba(75,227,140,0.1);
            border: 1px solid rgba(75,227,140,0.3);
            color: #4be38c;
            padding: 1rem;
            border-radius: 10px;
            margin-bottom: 1.5rem;
        }
        .info-box {
            background: rgba(59,130,246,0.1);
            border: 1px solid rgba(59,130,246,0.3);
            color: #60a5fa;
            padding: 1rem;
            border-radius: 10px;
            margin-bottom: 1.5rem;
        }
        .info-box ul {
            margin: 0.5rem 0 0 1rem;
        }
        @media (max-width: 768px) {
            .payout-container {
                padding: 1rem;
            }
            .payout-title {
                font-size: 2rem;
            }
        }
    </style>

    <div class="payout-container">
        <div class="payout-header">
            <h1 class="payout-title">Request Payout</h1>
            <a href="/affiliate/dashboard" class="back-btn">← Back to Dashboard</a>
        </div>

        <div class="balance-card">
            <div class="balance-amount">{fmt.Sprintf("$%.2f", stats.PendingPayout)}</div>
            <div class="balance-label">Available Balance</div>
        </div>

        if len(errors) > 0 {
            <div class="alert-error">
                <ul style="margin:0;padding-left:1rem;">
                    for _, err := range errors {
                        <li>{err}</li>
                    }
                </ul>
            </div>
        }

        if success != "" {
            <div class="alert-success">
                {success}
                <div style="margin-top: 1rem;">
                    <a href="/affiliate/payout/history" style="color: #4a94ff; text-decoration: underline;">View payout history</a>
                </div>
            </div>
        }

        <div class="info-box">
            <strong>Payout Information:</strong>
            <ul>
                <li>Minimum payout: $200.00</li>
                <li>Payments available in USDC (Solana) or Monero (XMR)</li>
                <li>Processing time: 1-3 business days</li>
                <li>All payouts are processed manually</li>
            </ul>
        </div>

        <form method="POST" action="/affiliate/payout" class="payout-form">
            <div class="form-group">
                <label class="form-label" for="amount">Payout Amount (USD)</label>
                <input class="form-input" type="number" id="amount" name="amount" step="0.01" min="200" 
                       max={fmt.Sprintf("%.2f", stats.PendingPayout)} required 
                       placeholder="Enter amount (minimum $200.00)"/>
            </div>

            <div class="form-group">
                <label class="form-label" for="payout_currency">Payout Currency</label>
                <select class="form-input" id="payout_currency" name="payout_currency" required onchange="updateAddressPlaceholder()">
                    <option value="">Select payout currency</option>
                    <option value="USDC_SOL">USDC (Solana)</option>
                    <option value="XMR">Monero (XMR)</option>
                </select>
            </div>

            <div class="form-group">
                <label class="form-label" for="wallet_address">Wallet Address</label>
                <input class="form-input" type="text" id="wallet_address" name="wallet_address" required 
                       placeholder="Select currency first"/>
            </div>

            <button type="submit" class="btn-payout" 
                    if stats.PendingPayout < 200.00 {
                        disabled
                    }>
                if stats.PendingPayout < 200.00 {
                    Insufficient Balance (Minimum $200.00)
                } else {
                    Request Payout
                }
            </button>
        </form>

        <script>
            function updateAddressPlaceholder() {
                const currencySelect = document.getElementById('payout_currency');
                const addressInput = document.getElementById('wallet_address');
                
                if (currencySelect.value === 'USDC_SOL') {
                    addressInput.placeholder = 'Enter your Solana wallet address (32-44 characters)';
                    addressInput.pattern = '[1-9A-HJ-NP-Za-km-z]{32,44}';
                } else if (currencySelect.value === 'XMR') {
                    addressInput.placeholder = 'Enter your Monero wallet address (95-106 characters)';
                    addressInput.pattern = '[48][0-9AB][1-9A-HJ-NP-Za-km-z]{93,103}';
                } else {
                    addressInput.placeholder = 'Select currency first';
                    addressInput.pattern = '';
                }
            }
        </script>
    </div>

    @Footer(){}
}

templ AffiliatePayoutHistory(history *api.PayoutHistory) {
    @Header(){}
    <style>
        body {
            background-color: #121520;
            font-family: 'Inter', 'Segoe UI', 'Arial', sans-serif;
        }
        .history-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }
        .history-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            flex-wrap: wrap;
            gap: 1rem;
        }
        .history-title {
            color: #ffffff;
            font-size: 2.5rem;
            font-weight: 800;
            margin: 0;
        }
        .back-btn {
            background: linear-gradient(45deg, #6b7280, #4b5563);
            color: white;
            padding: 0.7rem 1.5rem;
            border: none;
            border-radius: 8px;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.2s;
        }
        .back-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(107,114,128,0.3);
        }
        .summary-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }
        .summary-card {
            background: linear-gradient(145deg, #1a1f2e, #222633);
            border-radius: 16px;
            padding: 1.5rem;
            border: 1px solid rgba(255,255,255,0.05);
            text-align: center;
        }
        .summary-amount {
            font-size: 2rem;
            font-weight: 800;
            margin-bottom: 0.5rem;
        }
        .summary-label {
            color: #b0b8d1;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        .payouts-section {
            background: linear-gradient(145deg, #1a1f2e, #222633);
            border-radius: 16px;
            padding: 2rem;
            margin-bottom: 2rem;
            border: 1px solid rgba(255,255,255,0.05);
        }
        .section-title {
            color: #ffffff;
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 1rem;
        }
        .payouts-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 1rem;
        }
        .payouts-table th {
            color: #b0b8d1;
            font-weight: 600;
            text-align: left;
            padding: 0.75rem;
            border-bottom: 1px solid #2e3448;
        }
        .payouts-table td {
            color: #e0e0e0;
            padding: 0.75rem;
            border-bottom: 1px solid rgba(255,255,255,0.05);
        }
        .status-pending {
            color: #f59e0b;
            font-weight: 600;
        }
        .status-completed {
            color: #22c55e;
            font-weight: 600;
        }
        .status-approved {
            color: #3b82f6;
            font-weight: 600;
        }
        .status-rejected {
            color: #ef4444;
            font-weight: 600;
        }
        .tx-hash {
            font-family: 'Courier New', monospace;
            font-size: 0.8rem;
            color: #60a5fa;
        }
        .no-payouts {
            text-align: center;
            color: #6b7280;
            padding: 2rem;
            font-style: italic;
        }
        @media (max-width: 768px) {
            .history-container {
                padding: 1rem;
            }
            .history-title {
                font-size: 2rem;
            }
            .payouts-table {
                font-size: 0.9rem;
            }
        }
    </style>

    <div class="history-container">
        <div class="history-header">
            <h1 class="history-title">Payout History</h1>
            <a href="/affiliate/dashboard" class="back-btn">← Back to Dashboard</a>
        </div>

        <div class="summary-grid">
            <div class="summary-card">
                <div class="summary-amount" style="color: #22c55e;">{fmt.Sprintf("$%.2f", history.TotalPaidOut)}</div>
                <div class="summary-label">Total Paid Out</div>
            </div>

            <div class="summary-card">
                <div class="summary-amount" style="color: #f59e0b;">{fmt.Sprintf("$%.2f", history.PendingAmount)}</div>
                <div class="summary-label">Pending Payouts</div>
            </div>
        </div>

        if len(history.PendingPayouts) > 0 {
            <div class="payouts-section">
                <h2 class="section-title">Pending Payouts</h2>
                <table class="payouts-table">
                    <thead>
                        <tr>
                            <th>Date Requested</th>
                            <th>Amount</th>
                            <th>Currency</th>
                            <th>Wallet Address</th>
                            <th>Status</th>
                            <th>Notes</th>
                        </tr>
                    </thead>
                    <tbody>
                        for _, payout := range history.PendingPayouts {
                            <tr>
                                <td>{payout.RequestedAt.Format("Jan 2, 2006")}</td>
                                <td>{fmt.Sprintf("$%.2f", payout.Amount)}</td>
                                <td>
                                    if payout.PayoutCurrency == "USDC_SOL" {
                                        <span style="color: #3b82f6;">USDC</span>
                                    } else if payout.PayoutCurrency == "XMR" {
                                        <span style="color: #ff6600;">XMR</span>
                                    } else {
                                        {payout.PayoutCurrency}
                                    }
                                </td>
                                <td class="tx-hash">{payout.WalletAddress}</td>
                                <td>
                                    <span class="status-pending">⏳ {payout.Status}</span>
                                </td>
                                <td>{payout.AdminNotes}</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }

        if len(history.CompletedPayouts) > 0 {
            <div class="payouts-section">
                <h2 class="section-title">Completed Payouts</h2>
                <table class="payouts-table">
                    <thead>
                        <tr>
                            <th>Date Requested</th>
                            <th>Date Completed</th>
                            <th>Amount</th>
                            <th>Currency</th>
                            <th>Status</th>
                            <th>Transaction Hash</th>
                        </tr>
                    </thead>
                    <tbody>
                        for _, payout := range history.CompletedPayouts {
                            <tr>
                                <td>{payout.RequestedAt.Format("Jan 2, 2006")}</td>
                                <td>
                                    if payout.ProcessedAt != nil {
                                        {payout.ProcessedAt.Format("Jan 2, 2006")}
                                    } else {
                                        -
                                    }
                                </td>
                                <td>{fmt.Sprintf("$%.2f", payout.Amount)}</td>
                                <td>
                                    if payout.PayoutCurrency == "USDC_SOL" {
                                        <span style="color: #3b82f6;">USDC</span>
                                    } else if payout.PayoutCurrency == "XMR" {
                                        <span style="color: #ff6600;">XMR</span>
                                    } else {
                                        {payout.PayoutCurrency}
                                    }
                                </td>
                                <td>
                                    if payout.Status == "completed" {
                                        <span class="status-completed">✓ Completed</span>
                                    } else if payout.Status == "rejected" {
                                        <span class="status-rejected">✗ Rejected</span>
                                    } else {
                                        <span class="status-approved">📋 {payout.Status}</span>
                                    }
                                </td>
                                <td>
                                    if payout.TxHash != "" {
                                        <span class="tx-hash">{payout.TxHash}</span>
                                    } else {
                                        -
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        } else {
            <div class="payouts-section">
                <div class="no-payouts">
                    if len(history.PendingPayouts) == 0 && history.TotalPaidOut == 0 && history.PendingAmount == 0 {
                        <p>No payout history available yet.</p>
                        <p style="font-size: 0.9rem; color: #6b7280; margin-top: 0.5rem;">
                            The payout system is ready - once you request a payout, it will appear here.
                        </p>
                    } else {
                        No completed payouts yet.
                    }
                </div>
            </div>
        }
    </div>

    @Footer(){}
}