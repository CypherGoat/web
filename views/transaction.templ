// Copyright (C) 2025 CypherGoat
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

package views
import (
    "github.com/CypherGoat/web/cmd/api"
    "strings"
)

script toggleQRCodeHandler(msg string) {
  toggleQRCode(msg);
}

templ TransactionPage(transaction api.Transaction){
    <!-- TrustBox script -->
<script type="text/javascript" src="//widget.trustpilot.com/bootstrap/v5/tp.widget.bootstrap.min.js" async></script>
<!-- End TrustBox script -->

    @Header(){
 <style>
    body {
        background-color: #121520;
        color: #e0e0e0;
        font-family: 'Inter', 'Segoe UI', 'Arial', sans-serif;
        min-height: 100vh;
    }

    .transaction-card {
        background: linear-gradient(145deg, #1a1f2e, #222633);
        border-radius: 16px;
        padding: 2rem;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3), 0 2px 6px rgba(0, 102, 204, 0.07);
        transition: box-shadow 0.3s ease, transform 0.3s ease;
        border: 1px solid rgba(255, 255, 255, 0.05);
        max-width: 500px;
        width: 100%;
    }

    .transaction-card:hover {
        box-shadow: 0 16px 48px rgba(0, 0, 0, 0.4), 0 3px 10px rgba(0, 102, 204, 0.1);
        transform: translateY(-2px);
    }

    .transaction-header {
        font-size: 1.8rem;
        font-weight: 700;
        text-align: center;
        margin-bottom: 1.5rem;
        background: linear-gradient(to right, #ffffff, #e0e0e0);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .transaction-section {
        margin-bottom: 1.5rem;
    }

    .section-label {
        color: #a0a0a0;
        font-size: 1rem;
        font-weight: 500;
        margin-bottom: 0.3rem;
    }

    .section-value {
        color: #ffffff;
        font-size: 1.1rem;
        font-weight: 600;
        word-break: break-all;
    }

    .code-block {
        background: rgba(0, 0, 0, 0.15);
        border-radius: 8px;
        padding: 0.8rem;
        font-family: 'Courier New', monospace;
        color: #e0e0e0;
        border: 1px solid rgba(255, 255, 255, 0.05);
        word-break: break-all;
        overflow-wrap: break-word;
    }

    .qr-toggle-btn {
        color: #0088ff;
        font-weight: 600;
        background: rgba(0, 136, 255, 0.1);
        border-radius: 8px;
        padding: 0.5rem 1rem;
        transition: all 0.3s ease;
        border: 1px solid rgba(0, 136, 255, 0.2);
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

    .qr-toggle-btn svg {
        margin-right: 0.5rem;
        vertical-align: middle;
    }

    .qr-toggle-btn:hover {
        background: rgba(0, 136, 255, 0.2);
    }

    .divider {
        height: 1px;
        background: linear-gradient(to right, rgba(255,255,255,0.05), rgba(255,255,255,0.1), rgba(255,255,255,0.05));
        margin: 1.5rem 0;
    }

    .success-container {
        background: linear-gradient(145deg, rgba(16, 185, 129, 0.1), rgba(5, 150, 105, 0.1));
        border-radius: 12px;
        padding: 1.5rem;
        text-align: center;
        border: 1px solid rgba(16, 185, 129, 0.2);
    }

    .success-icon {
        background: rgba(16, 185, 129, 0.15);
        border-radius: 50%;
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1rem;
    }

    .refresh-btn {
        background: linear-gradient(135deg, #0088ff, #0055cc);
        color: #ffffff;
        padding: 0.85rem 1.5rem;
        border: none;
        border-radius: 12px;
        font-size: 1rem;
        font-weight: 600;
        letter-spacing: 0.01em;
        cursor: pointer;
        width: 100%;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15), 0 2px 6px rgba(0, 102, 204, 0.2);
        position: relative;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
    }
    
    .refresh-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.7s ease;
    }
    
    .refresh-btn:hover {
        background: linear-gradient(135deg, #0099ff, #0066dd);
        transform: translateY(-2px);
        box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2), 0 2px 8px rgba(0, 102, 204, 0.3);
    }
    
    .refresh-btn:hover::before {
        left: 100%;
    }
    
    .required-tag {
        background-color: rgba(220, 38, 38, 0.2);
        color: #ef4444;
        font-size: 0.7rem;
        padding: 0.2rem 0.5rem;
        border-radius: 4px;
        font-weight: 600;
        margin-left: 0.5rem;
        vertical-align: middle;
        letter-spacing: 0.02em;
        text-transform: uppercase;
        border: 1px solid rgba(220, 38, 38, 0.3);
    }

    .external-link {
        color: #0088ff;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .external-link:hover {
        color: #0099ff;
        text-decoration: underline;
    }
    
    .review-section {
        margin-top: 1.5rem;
    }
    
    .review-section-title {
        color: #e0e0e0;
        font-size: 1.2rem;
        font-weight: 600;
        text-align: center;
        margin-bottom: 1.5rem;
    }
    
    .review-widgets {
        display: grid;
        gap: 1rem;
        grid-template-columns: 1fr;
    }
    
    @media (min-width: 640px) {
        .review-widgets {
            grid-template-columns: 1fr 1fr;
        }
    }
    
    .review-widget {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 12px;
        padding: 1.25rem;
        border: 1px solid rgba(255, 255, 255, 0.1);
        transition: all 0.3s ease;
    }
    
    .review-widget:hover {
        background: rgba(255, 255, 255, 0.08);
        border-color: rgba(255, 255, 255, 0.15);
        transform: translateY(-1px);
    }
    
    .review-widget-header {
        display: flex;
        align-items: center;
        margin-bottom: 0.75rem;
    }
    
    .review-icon {
        margin-right: 0.5rem;
        flex-shrink: 0;
    }
    
    .review-widget-title {
        color: #e0e0e0;
        font-weight: 600;
        font-size: 1rem;
    }
    
    .review-widget-description {
        color: #a0a0a0;
        font-size: 0.85rem;
        margin-bottom: 1rem;
        line-height: 1.4;
    }
    
    .review-widget-link {
        display: inline-flex;
        align-items: center;
        background: linear-gradient(135deg, #0088ff, #0055cc);
        color: #ffffff;
        padding: 0.6rem 1rem;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 600;
        font-size: 0.9rem;
        transition: all 0.3s ease;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    }
    
    .review-widget-link:hover {
        background: linear-gradient(135deg, #0099ff, #0066dd);
        transform: translateY(-1px);
        box-shadow: 0 3px 12px rgba(0, 0, 0, 0.2);
        color: #ffffff;
        text-decoration: none;
    }
    
    .trustpilot-widget-container .review-widget-link {
        background: linear-gradient(135deg, #00b67a, #00a56b);
    }
    
    .trustpilot-widget-container .review-widget-link:hover {
        background: linear-gradient(135deg, #00c98d, #00b67a);
    }
    
    .kycnotme-widget-container .review-widget-link {
        background: linear-gradient(135deg, #cd853f, #daa520);
    }
    
    .kycnotme-widget-container .review-widget-link:hover {
        background: linear-gradient(135deg, #daa520, #f4a460);
    }
    
    .contact-section {
        margin-top: 1.5rem;
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        overflow: hidden;
        background: rgba(255, 255, 255, 0.02);
        transition: all 0.3s ease;
    }
    
    .contact-header {
        padding: 1rem;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: space-between;
        background: rgba(255, 255, 255, 0.05);
        transition: all 0.3s ease;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .contact-header:hover {
        background: rgba(255, 255, 255, 0.08);
    }
    
    .contact-header-left {
        display: flex;
        align-items: center;
    }
    
    .contact-title {
        color: #e0e0e0;
        font-weight: 600;
        font-size: 1rem;
        margin-left: 0.5rem;
    }
    
    .contact-chevron {
        transition: transform 0.3s ease;
        color: #a0a0a0;
    }
    
    .contact-chevron.expanded {
        transform: rotate(180deg);
    }
    
    .contact-content {
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.3s ease;
    }
    
    .contact-content.expanded {
        max-height: 300px;
    }
    
    .contact-inner {
        padding: 1.5rem;
    }
    
    .contact-description {
        color: #a0a0a0;
        font-size: 0.9rem;
        margin-bottom: 1.5rem;
        line-height: 1.4;
    }
    
    .contact-links {
        display: grid;
        gap: 1rem;
        grid-template-columns: 1fr;
    }
    
    @media (min-width: 640px) {
        .contact-links {
            grid-template-columns: 1fr 1fr;
        }
    }
    
    .contact-link {
        display: flex;
        align-items: center;
        padding: 0.8rem 1rem;
        background: rgba(255, 255, 255, 0.05);
        border-radius: 8px;
        text-decoration: none;
        color: #e0e0e0;
        transition: all 0.3s ease;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .contact-link:hover {
        background: rgba(255, 255, 255, 0.1);
        border-color: rgba(255, 255, 255, 0.2);
        transform: translateY(-1px);
        color: #ffffff;
        text-decoration: none;
    }
    
    .contact-link-icon {
        margin-right: 0.75rem;
        flex-shrink: 0;
    }
    
    .contact-link-content {
        flex: 1;
    }
    
    .contact-link-title {
        font-weight: 600;
        font-size: 0.95rem;
        margin-bottom: 0.2rem;
    }
    
    .contact-link-subtitle {
        font-size: 0.8rem;
        color: #a0a0a0;
    }
    
    .telegram-link:hover {
        background: rgba(0, 136, 204, 0.1);
        border-color: rgba(0, 136, 204, 0.3);
    }
    
    .simplex-link:hover {
        background: rgba(76, 175, 80, 0.1);
        border-color: rgba(76, 175, 80, 0.3);
    }
 </style>

 <form action="" method="get">
    <div class="flex items-center justify-center min-h-screen bg-[#121520] pb-4 sm:pb-0">
        <div class="transaction-card mx-4 my-6">
            <h2 class="transaction-header">{ transaction.Provider }</h2>
            
            <div class="transaction-section">
                <div class="section-label">Transaction Status</div>
                <div class="section-value">
                    if transaction.Status == "" {
                        <span class="font-medium text-blue-400">Created</span>
                    } else {
                        <span class="font-medium text-blue-400">{ transaction.Status }</span>
                    }
                </div>
            </div>
            
            <div class="transaction-section">
    <div class="section-label">You Send</div>
    <div class="section-value">
        <span style="display:inline-flex;align-items:center;">
            { FormatFloat(transaction.SendAmount) } { strings.ToUpper(transaction.Coin1) }
            if transaction.IsPayment {
                <span class="send-lock-badge" style="position:relative;display:inline-flex;align-items:center;">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" style="margin-left:6px;vertical-align:middle;" fill="none" stroke="currentColor" stroke-width="1.25" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M5.25 7V4.5a2.75 2.75 0 0 1 5.5 0V7"/>
                        <rect x="3.5" y="7" width="9" height="7" rx="2"/>
                        <circle cx="8" cy="9.75" r="1.05" fill="currentColor" stroke="none"/>
                        <path d="M8 10.8v1.7"/>
                    </svg>
                    <span class="tooltip-text" style="visibility:hidden;opacity:0;position:absolute;bottom:125%;left:50%;transform:translateX(-50%);background:#222;color:#fff;padding:6px 12px;border-radius:6px;font-size:0.95em;white-space:nowrap;transition:opacity 0.2s;z-index:10;">
                        This is a fixed rate exchange, send <b>EXACTLY</b> the amount specified.
                    </span>
                </span>
            }
        </span>
    </div>
</div>

<div class="transaction-section">
    <div class="section-label">You Receive</div>
    <div class="section-value">
        <span style="display:inline-flex;align-items:center;">
            if transaction.ReceiveAmount > 0 {
                { FormatFloat(transaction.ReceiveAmount) } { strings.ToUpper(transaction.Coin2) }
            } else {
                { FormatFloat(transaction.EstimateAmount) } { strings.ToUpper(transaction.Coin2) }
            }
            if transaction.IsPayment {
                <span class="receive-lock-badge" style="position:relative;display:inline-flex;align-items:center;">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" style="margin-left:6px;vertical-align:middle;" fill="none" stroke="currentColor" stroke-width="1.25" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M5.25 7V4.5a2.75 2.75 0 0 1 5.5 0V7"/>
                        <rect x="3.5" y="7" width="9" height="7" rx="2"/>
                        <circle cx="8" cy="9.75" r="1.05" fill="currentColor" stroke="none"/>
                        <path d="M8 10.8v1.7"/>
                    </svg>
                    <span class="tooltip-text" style="visibility:hidden;opacity:0;position:absolute;bottom:125%;left:50%;transform:translateX(-50%);background:#222;color:#fff;padding:6px 12px;border-radius:6px;font-size:0.95em;white-space:nowrap;transition:opacity 0.2s;z-index:10;">
                        You will receive <b>exactly</b> the amount shown.
                    </span>
                </span>
            }
        </span>
    </div>
</div>
            
            <div class="transaction-section">
                <div class="section-label">Send Address</div>
                <div class="code-block">{ transaction.Address }</div>
            </div>
            
            if transaction.Memo != "" {
                <div class="transaction-section">
                    <div class="section-label">Memo <span class="required-tag">REQUIRED</span></div>
                    <div class="code-block">{ transaction.Memo }</div>
                </div>
            }
            
            <div class="transaction-section text-center">
                <button id="toggleButton" type="button" onclick={ toggleQRCodeHandler(transaction.Address) } 
                        class="qr-toggle-btn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M1 1h5v5H1zM1 10h5v5H1zM10 1h5v5h-5z"/>
                        <path d="M10 10h1v1h-1zm1 1h1v1h-1zm1 1h1v1h-1zm1 0h1v-1h-1zm0-1h1V9h-1zm1-3h-1v1h1zm0 1h-1v1h1zm-2-1h-1v1h1zm0 1h-1v1h1z"/>
                    </svg>
                    Show QR Code
                </button>
                <div class="mt-4">
                    <img id="qrcode" src="" alt="QR Code" class="hidden mx-auto border-4 border-white rounded-lg">
                </div>
            </div>
            
            <div class="transaction-section">
                <div class="section-label">Exchange Link</div>
                <div class="section-value">
                    <a href={ templ.URL(transaction.Track) } class="external-link" target="_blank">
                        { strings.ToLower(transaction.Provider) }
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16" class="inline-block ml-1">
                          <path fill-rule="evenodd" d="M8.636 3.5a.5.5 0 0 0-.5-.5H1.5A1.5 1.5 0 0 0 0 4.5v10A1.5 1.5 0 0 0 1.5 16h10a.5.5 0 0 0 1.5-1.5V7.864a.5.5 0 0 0-1 0V14.5a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h6.636a.5.5 0 0 0 .5-.5z"/>
                          <path fill-rule="evenodd" d="M16 .5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h3.793L6.146 9.146a.5.5 0 1 0 .708.708L15 1.707V5.5a.5.5 0 0 0 1 0v-5z"/>
                        </svg>
                    </a>
                </div>
            </div>
            
            <div class="transaction-section">
                <div class="section-label">CypherGoat ID</div>
                <div class="section-value font-mono">{ transaction.CGID }</div>
            </div>
            
            <button type="submit" class="refresh-btn">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16" class="mr-2">
                    <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z"/>
                    <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z"/>
                </svg>
                Refresh Status
            </button>
            
            if transaction.Done == true {
                <div class="divider"></div>
                <div class="success-container">
                    <div class="success-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16" class="text-green-500">
                            <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z"/>
                        </svg>
                    </div>
                    <p class="text-xl font-bold text-green-400 mb-2">Transaction Complete</p>
                    <p class="text-gray-300">Thank you for using CypherGoat</p>
                </div>

                <div class="divider"></div>
                
                <!-- Unified Review Section -->
                <div class="review-section">
                    <h3 class="review-section-title">Share your experience</h3>
                    
                    <div class="review-widgets">
                        <div class="review-widget trustpilot-widget-container">
                            <div class="review-widget-header">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16" class="review-icon text-green-500">
                                    <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
                                </svg>
                                <span class="review-widget-title">Trustpilot</span>
                            </div>
                             <a href="https://www.trustpilot.com/evaluate/cyphergoat.com" target="_blank" rel="noopener" class="block">
                                <img src="/static/tp.jpg" width="200" height="60" alt="Leave a review on Trustpilot" class="mx-auto mt-2">
                            </a>
                        </div>

                        <!-- KYCnotme widget -->
                        <div class="review-widget kycnotme-widget-container">
                            <div class="review-widget-header">
                                <img src="/static/kycnm_logo.svg" width="20" height="20" alt="KYCnot.me logo" class="review-icon">
                                <span class="review-widget-title">KYCnot.me</span>
                            </div>
                
                            <a href="https://kycnot.me/service/cyphergoat/review" target="_blank" rel="noopener" class="block">
                                <img src="/static/kycnotme.svg" width="200" height="60" alt="Leave a review on KYCnot.me" class="mx-auto mt-2">
                            </a>
                        </div>
                    </div>
                </div>
            } 
            if transaction.Done == false{
            <!-- Contact Support Section -->
            <div class="contact-section">
                <div class="contact-header" onclick="toggleContactSection()">
                    <div class="contact-header-left">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16" class="text-yellow-500">
                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                            <path d="M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z"/>
                        </svg>
                        <span class="contact-title">Problem with your transaction?</span>
                    </div>
                    <svg id="contactChevron" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16" class="contact-chevron">
                        <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"/>
                    </svg>
                </div>
                <div id="contactContent" class="contact-content">
                    <div class="contact-inner">
                        <p class="contact-description">
                            Need help with your transaction? Our support team is available to assist you through secure messaging platforms.
                        </p>
                        <div class="contact-links">
                            <a href="https://t.me/CypherGoatSupport" target="_blank" rel="noopener" class="contact-link telegram-link">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16" class="contact-link-icon text-blue-400">
                                    <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.287 5.906c-.778.324-2.334.994-4.666 2.01-.378.15-.577.298-.595.442-.03.243.275.339.69.47l.175.055c.408.133.958.288 1.243.294.26.006.549-.1.868-.32 2.179-1.471 3.304-2.214 3.374-2.23.05-.012.12-.026.166.016.047.041.042.12.037.141-.03.129-1.227 1.241-1.846 1.817-.193.18-.33.307-.358.336a8.154 8.154 0 0 1-.188.186c-.38.366-.664.64.015 1.088.327.216.589.393.85.571.284.194.568.387.936.629.093.06.183.125.27.187.331.236.63.448.997.414.214-.02.435-.22.547-.82.265-1.417.786-4.486.906-5.751a1.426 1.426 0 0 0-.013-.315.337.337 0 0 0-.114-.217.526.526 0 0 0-.31-.093c-.3.005-.763.166-2.984 1.09z"/>
                                </svg>
                                <div class="contact-link-content">
                                    <div class="contact-link-title">Telegram</div>
                                    <div class="contact-link-subtitle">CypherGoatSupport</div>
                                </div>
                            </a>
                            <a href="https://smp15.simplex.im/a#x8Q20y3KcKabkLeCFyDMvUDgaf3EdQQh_0eE3xyxBYw" target="_blank" rel="noopener" class="contact-link simplex-link">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16" class="contact-link-icon text-green-400">
                                    <path d="M8 1a2.5 2.5 0 0 1 2.5 2.5V4h-5v-.5A2.5 2.5 0 0 1 8 1zm3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4h-3.5zM2 5h12v9a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V5z"/>
                                </svg>
                                <div class="contact-link-content">
                                    <div class="contact-link-title">SimpleX Chat</div>
                                    <div class="contact-link-subtitle">Private messaging</div>
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            }
        </div>
    </div>
</form>

    <script>
        let qrCodeVisible = false;
        let contactExpanded = false;
        
        function toggleQRCode(text) {
            const img = document.getElementById('qrcode');
            const button = document.getElementById('toggleButton');
            if (qrCodeVisible) {
                img.classList.add('hidden');
                button.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16"><path d="M1 1h5v5H1zM1 10h5v5H1zM10 1h5v5h-5z"/><path d="M10 10h1v1h-1zm1 1h1v1h-1zm1 1h1v1h-1zm1 0h1v-1h-1zm0-1h1V9h-1zm1-3h-1v1h1zm0 1h-1v1h1zm-2-1h-1v1h1zm0 1h-1v1h1z"/></svg> Show QR Code';
            } else {
                fetch('/generate?text=' + encodeURIComponent(text))
                    .then(response => response.blob())
                    .then(blob => {
                        const url = URL.createObjectURL(blob);
                        img.src = url;
                        img.classList.remove('hidden');
                        button.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16"><path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/></svg> Hide QR Code';
                    })
                    .catch(error => console.error('Error:', error));
            }
            qrCodeVisible = !qrCodeVisible;
        }
        
        function toggleContactSection() {
            const content = document.getElementById('contactContent');
            const chevron = document.getElementById('contactChevron');
            
            if (contactExpanded) {
                content.classList.remove('expanded');
                chevron.classList.remove('expanded');
            } else {
                content.classList.add('expanded');
                chevron.classList.add('expanded');
            }
            contactExpanded = !contactExpanded;
        }
            document.addEventListener('DOMContentLoaded', function() {
        var sendLock = document.querySelector('.send-lock-badge');
        if (sendLock) {
            sendLock.onmouseenter = function() {
                var tip = sendLock.querySelector('.tooltip-text');
                tip.style.visibility = 'visible';
                tip.style.opacity = '1';
            };
            sendLock.onmouseleave = function() {
                var tip = sendLock.querySelector('.tooltip-text');
                tip.style.visibility = 'hidden';
                tip.style.opacity = '0';
            };
        }

        var receiveLock = document.querySelector('.receive-lock-badge');
        if (receiveLock) {
            receiveLock.onmouseenter = function() {
                var tip = receiveLock.querySelector('.tooltip-text');
                tip.style.visibility = 'visible';
                tip.style.opacity = '1';
            };
            receiveLock.onmouseleave = function() {
                var tip = receiveLock.querySelector('.tooltip-text');
                tip.style.visibility = 'hidden';
                tip.style.opacity = '0';
            };
        }
    });
    </script>
}
}
